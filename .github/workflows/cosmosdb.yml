
name: mystorekeeper infrastructure
on:
  push:
    branches:
      - dev
      - stage
      - prod
    paths:
      - "cosmosdb/**"
      - "modules/cosmosdb/**"

env:

  #Define Global Environment
  GLOBAL_STORAGE_ACCOUNT_NAME: dspglobalconfigurations
  GLOBAL_RESOURCE_GROUP_NAME: rg-global-configurations
  GLOBAL_STORAGE_ACCOUNT_SKU: Standard_ZRS
  GLOBAL_COSMOSDB_CONTAINER_NAME: cosmosdb
  GLOBAL_STORAGE_ACCOUNT_AUTH_MODE: login
  GLOBAL_LOCATION: eastus2

  #Define Dev Environment
  DEV_LOCATION: eastus2
  DEV_COSMOSDB_NAME: "msk-dev"
  DEV_COSMOSDB_RESOURCE_GROUP: "rg-dev-cosmosdb"
  
  #Define Stage Environment
  STAGE_LOCATION: eastus
  STAGE_COSMOSDB_NAME: "msk-stage"
  STAGE_COSMOSDB_RESOURCE_GROUP: "rg-stage-cosmosdb"

  #Define Prod Environment
  PROD_LOCATION: westeurope
  PROD_COSMOSDB_NAME: "msk-prod"
  PROD_COSMOSDB_RESOURCE_GROUP: "rg-prod-cosmosdb"

jobs:

  # Run job when pushed to dev, stage and prod
  Global:
    if: ${{ github.ref != 'refs/heads/main' || github.ref == 'refs/heads/master' }}
    name: Global environment
    environment: GLOBAL
    runs-on: ubuntu-22.04
    steps:
      - id: A
        name: checkout repository
        uses: actions/checkout@v3
      - id: B
        name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - id: C
        name: Create resource group
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az group create \
            -n ${{ env.GLOBAL_RESOURCE_GROUP_NAME }} \
            -l ${{ env.GLOBAL_LOCATION }}
      - id: D
        name: Create storage account
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az storage account create \
            -n ${{ env.GLOBAL_STORAGE_ACCOUNT_NAME }} \
            -g ${{ env.GLOBAL_RESOURCE_GROUP_NAME }} \
            -l ${{ env.GLOBAL_LOCATION }} \
            --sku ${{ env.GLOBAL_STORAGE_ACCOUNT_SKU }}
      - id: E
        name: Create storage container
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az storage container create \
            -n ${{ env.GLOBAL_COSMOSDB_CONTAINER_NAME }} \
            --account-name ${{ env.GLOBAL_STORAGE_ACCOUNT_NAME }} \
            --auth-mode ${{ env.GLOBAL_STORAGE_ACCOUNT_AUTH_MODE }}

  # Run job when pushed to development environment
  DEV:
    if: ${{ github.ref == 'refs/heads/dev' }}
    environment: DEV
    name: Development environment
    runs-on: ubuntu-22.04
    needs: [Global]
    steps:
      - id: A
        name: checkout repository
        uses: actions/checkout@v3
      - id: B
        name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - id: C
        name: terraform init
        run: |
          terraform init \
          -backend-config="storage_account_name=${{ env.GLOBAL_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ env.GLOBAL_COSMOSDB_CONTAINER_NAME }}" \
          -backend-config="resource_group_name=${{ env.GLOBAL_RESOURCE_GROUP_NAME }}"
      - id: D
        name: terraform fmt
        run: |
          terraform fmt
      - id: E
        name: terraform validate
        run: |
          terraform validate
      - id: F
        name: terraform plan
        run: |
          terraform validate -backend-config="storage_account_name=${{ env.GLOBAL_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ env.GLOBAL_COSMOSDB_CONTAINER_NAME }}" -backend-config="resource_group_name=${{ env.GLOBAL_RESOURCE_GROUP_NAME }}" -var="location=${{ env.DEV_LOCATION }}" -var="database-name=${{ env.DEV_COSMOSDB_NAME }}" -var="resource-group=${{ env.DEV_COSMOSDB_RESOURCE_GROUP }}" -var="subscription=${{ secrets.SUBSCRIPTION_ID }}"

  # Run job when pushed to staging environment
  STAGE:
    if: ${{ github.ref == 'refs/heads/stage' }}
    environment: STAGE
    name: Staging environment
    runs-on: ubuntu-22.04
    needs: [Global]
    steps:
      - id: A
        name: checkout repository
        uses: actions/checkout@v3
      - id: B
        name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

  # Run job when pushed to production environment
  PROD:
    if: ${{ github.ref == 'refs/heads/prod' }}
    environment: PROD
    name: Production environment
    runs-on: ubuntu-22.04
    needs: [Global]
    steps:
      - id: A
        name: checkout repository
        uses: actions/checkout@v3
      - id: B
        name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
